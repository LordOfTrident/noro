==26436== Memcheck, a memory error detector
==26436== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==26436== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==26436== Command: ./noro
==26436== Parent PID: 26419
==26436== 
==26436== Invalid read of size 8
==26436==    at 0x4A4F614: std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::length() const (basic_string.h:1071)
==26436==    by 0x142C4B: Renderers::Noro::RenderEditorWindow(EditorWindow&) (render.cc:82)
==26436==    by 0x12F149: App::Render() (app.cc:220)
==26436==    by 0x12EE39: App::Update() (app.cc:214)
==26436==    by 0x142516: main (main.cc:7)
==26436==  Address 0x4f6c7f8 is 8 bytes after a block of size 32 alloc'd
==26436==    at 0x4846003: operator new(unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==26436==    by 0x136C9B: std::__new_allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >::allocate(unsigned long, void const*) (new_allocator.h:137)
==26436==    by 0x1358A8: std::allocator_traits<std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::allocate(std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >&, unsigned long) (alloc_traits.h:464)
==26436==    by 0x134625: std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_allocate(unsigned long) (stl_vector.h:378)
==26436==    by 0x138350: std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_M_create_storage(unsigned long) (stl_vector.h:395)
==26436==    by 0x13767A: std::_Vector_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::_Vector_base(unsigned long, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > const&) (stl_vector.h:332)
==26436==    by 0x1363E8: std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >::vector(std::vector<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::allocator<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > > const&) (stl_vector.h:598)
==26436==    by 0x134F59: Editor::Editor(Editor const&) (editor.hh:7)
==26436==    by 0x142AC2: Renderers::Noro::RenderEditorWindow(EditorWindow&) (render.cc:71)
==26436==    by 0x12F149: App::Render() (app.cc:220)
==26436==    by 0x12EE39: App::Update() (app.cc:214)
==26436==    by 0x142516: main (main.cc:7)
==26436== 
==26436== 
==26436== HEAP SUMMARY:
==26436==     in use at exit: 830,315 bytes in 476 blocks
==26436==   total heap usage: 2,840 allocs, 2,364 frees, 1,292,345 bytes allocated
==26436== 
==26436== LEAK SUMMARY:
==26436==    definitely lost: 0 bytes in 0 blocks
==26436==    indirectly lost: 0 bytes in 0 blocks
==26436==      possibly lost: 712 bytes in 9 blocks
==26436==    still reachable: 829,603 bytes in 467 blocks
==26436==         suppressed: 0 bytes in 0 blocks
==26436== Rerun with --leak-check=full to see details of leaked memory
==26436== 
==26436== For lists of detected and suppressed errors, rerun with: -s
==26436== ERROR SUMMARY: 211 errors from 1 contexts (suppressed: 0 from 0)
