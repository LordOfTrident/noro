==4642== Memcheck, a memory error detector
==4642== Copyright (C) 2002-2022, and GNU GPL'd, by Julian Seward et al.
==4642== Using Valgrind-3.19.0 and LibVEX; rerun with -h for copyright info
==4642== Command: ./noro
==4642== Parent PID: 3403
==4642== 
==4642== Invalid write of size 1
==4642==    at 0x4A45AEE: assign (char_traits.h:354)
==4642==    by 0x4A45AEE: std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, long) (streambuf.tcc:67)
==4642==    by 0x4A0DB39: std::basic_filebuf<char, std::char_traits<char> >::xsgetn(char*, long) (fstream.tcc:748)
==4642==    by 0x4A1B341: sgetn (streambuf:363)
==4642==    by 0x4A1B341: std::istream::read(char*, long) (istream.tcc:696)
==4642==    by 0x1392FD: FS::File::Binary::Read(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (fs.cc:77)
==4642==    by 0x12D0E7: App::PlayRecording(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (app.cc:408)
==4642==    by 0x13A7A9: InputEvents::PlayRecording(InputWindow&) (inputEvents.cc:135)
==4642==    by 0x13AF6A: InputWindow::HandleInput(unsigned short) (inputWindow.cc:119)
==4642==    by 0x12A477: App::Update() (app.cc:79)
==4642==    by 0x13BFFA: main (main.cc:7)
==4642==  Address 0x4f77710 is 0 bytes after a block of size 0 alloc'd
==4642==    at 0x4845888: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4642==    by 0x13C0EB: AllocatedPointer::Alloc(unsigned long) (pointer.cc:20)
==4642==    by 0x1392C4: FS::File::Binary::Read(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (fs.cc:75)
==4642==    by 0x12D0E7: App::PlayRecording(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (app.cc:408)
==4642==    by 0x13A7A9: InputEvents::PlayRecording(InputWindow&) (inputEvents.cc:135)
==4642==    by 0x13AF6A: InputWindow::HandleInput(unsigned short) (inputWindow.cc:119)
==4642==    by 0x12A477: App::Update() (app.cc:79)
==4642==    by 0x13BFFA: main (main.cc:7)
==4642== 
==4642== Invalid write of size 1
==4642==    at 0x484CEE8: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4642==    by 0x4A45A8F: copy (char_traits.h:431)
==4642==    by 0x4A45A8F: std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, long) (streambuf.tcc:56)
==4642==    by 0x4A0DB39: std::basic_filebuf<char, std::char_traits<char> >::xsgetn(char*, long) (fstream.tcc:748)
==4642==    by 0x4A1B341: sgetn (streambuf:363)
==4642==    by 0x4A1B341: std::istream::read(char*, long) (istream.tcc:696)
==4642==    by 0x1392FD: FS::File::Binary::Read(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (fs.cc:77)
==4642==    by 0x12D0E7: App::PlayRecording(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (app.cc:408)
==4642==    by 0x13A7A9: InputEvents::PlayRecording(InputWindow&) (inputEvents.cc:135)
==4642==    by 0x13AF6A: InputWindow::HandleInput(unsigned short) (inputWindow.cc:119)
==4642==    by 0x12A477: App::Update() (app.cc:79)
==4642==    by 0x13BFFA: main (main.cc:7)
==4642==  Address 0x4f77711 is 1 bytes after a block of size 0 alloc'd
==4642==    at 0x4845888: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4642==    by 0x13C0EB: AllocatedPointer::Alloc(unsigned long) (pointer.cc:20)
==4642==    by 0x1392C4: FS::File::Binary::Read(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (fs.cc:75)
==4642==    by 0x12D0E7: App::PlayRecording(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (app.cc:408)
==4642==    by 0x13A7A9: InputEvents::PlayRecording(InputWindow&) (inputEvents.cc:135)
==4642==    by 0x13AF6A: InputWindow::HandleInput(unsigned short) (inputWindow.cc:119)
==4642==    by 0x12A477: App::Update() (app.cc:79)
==4642==    by 0x13BFFA: main (main.cc:7)
==4642== 
==4642== Invalid write of size 8
==4642==    at 0x484CF1B: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4642==    by 0x4A45A8F: copy (char_traits.h:431)
==4642==    by 0x4A45A8F: std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, long) (streambuf.tcc:56)
==4642==    by 0x4A0DB39: std::basic_filebuf<char, std::char_traits<char> >::xsgetn(char*, long) (fstream.tcc:748)
==4642==    by 0x4A1B341: sgetn (streambuf:363)
==4642==    by 0x4A1B341: std::istream::read(char*, long) (istream.tcc:696)
==4642==    by 0x1392FD: FS::File::Binary::Read(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (fs.cc:77)
==4642==    by 0x12D0E7: App::PlayRecording(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (app.cc:408)
==4642==    by 0x13A7A9: InputEvents::PlayRecording(InputWindow&) (inputEvents.cc:135)
==4642==    by 0x13AF6A: InputWindow::HandleInput(unsigned short) (inputWindow.cc:119)
==4642==    by 0x12A477: App::Update() (app.cc:79)
==4642==    by 0x13BFFA: main (main.cc:7)
==4642==  Address 0x4f77718 is 8 bytes after a block of size 0 alloc'd
==4642==    at 0x4845888: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4642==    by 0x13C0EB: AllocatedPointer::Alloc(unsigned long) (pointer.cc:20)
==4642==    by 0x1392C4: FS::File::Binary::Read(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (fs.cc:75)
==4642==    by 0x12D0E7: App::PlayRecording(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (app.cc:408)
==4642==    by 0x13A7A9: InputEvents::PlayRecording(InputWindow&) (inputEvents.cc:135)
==4642==    by 0x13AF6A: InputWindow::HandleInput(unsigned short) (inputWindow.cc:119)
==4642==    by 0x12A477: App::Update() (app.cc:79)
==4642==    by 0x13BFFA: main (main.cc:7)
==4642== 
==4642== Invalid write of size 8
==4642==    at 0x484CF23: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4642==    by 0x4A45A8F: copy (char_traits.h:431)
==4642==    by 0x4A45A8F: std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, long) (streambuf.tcc:56)
==4642==    by 0x4A0DB39: std::basic_filebuf<char, std::char_traits<char> >::xsgetn(char*, long) (fstream.tcc:748)
==4642==    by 0x4A1B341: sgetn (streambuf:363)
==4642==    by 0x4A1B341: std::istream::read(char*, long) (istream.tcc:696)
==4642==    by 0x1392FD: FS::File::Binary::Read(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (fs.cc:77)
==4642==    by 0x12D0E7: App::PlayRecording(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (app.cc:408)
==4642==    by 0x13A7A9: InputEvents::PlayRecording(InputWindow&) (inputEvents.cc:135)
==4642==    by 0x13AF6A: InputWindow::HandleInput(unsigned short) (inputWindow.cc:119)
==4642==    by 0x12A477: App::Update() (app.cc:79)
==4642==    by 0x13BFFA: main (main.cc:7)
==4642==  Address 0x4f77720 is 16 bytes after a block of size 0 alloc'd
==4642==    at 0x4845888: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4642==    by 0x13C0EB: AllocatedPointer::Alloc(unsigned long) (pointer.cc:20)
==4642==    by 0x1392C4: FS::File::Binary::Read(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (fs.cc:75)
==4642==    by 0x12D0E7: App::PlayRecording(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (app.cc:408)
==4642==    by 0x13A7A9: InputEvents::PlayRecording(InputWindow&) (inputEvents.cc:135)
==4642==    by 0x13AF6A: InputWindow::HandleInput(unsigned short) (inputWindow.cc:119)
==4642==    by 0x12A477: App::Update() (app.cc:79)
==4642==    by 0x13BFFA: main (main.cc:7)
==4642== 
==4642== Invalid write of size 8
==4642==    at 0x484CF2B: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4642==    by 0x4A45A8F: copy (char_traits.h:431)
==4642==    by 0x4A45A8F: std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, long) (streambuf.tcc:56)
==4642==    by 0x4A0DB39: std::basic_filebuf<char, std::char_traits<char> >::xsgetn(char*, long) (fstream.tcc:748)
==4642==    by 0x4A1B341: sgetn (streambuf:363)
==4642==    by 0x4A1B341: std::istream::read(char*, long) (istream.tcc:696)
==4642==    by 0x1392FD: FS::File::Binary::Read(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (fs.cc:77)
==4642==    by 0x12D0E7: App::PlayRecording(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (app.cc:408)
==4642==    by 0x13A7A9: InputEvents::PlayRecording(InputWindow&) (inputEvents.cc:135)
==4642==    by 0x13AF6A: InputWindow::HandleInput(unsigned short) (inputWindow.cc:119)
==4642==    by 0x12A477: App::Update() (app.cc:79)
==4642==    by 0x13BFFA: main (main.cc:7)
==4642==  Address 0x4f77728 is 24 bytes after a block of size 0 in arena "client"
==4642== 

valgrind: m_mallocfree.c:303 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 64, hi = 18446744073709551615.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==4642==    at 0x58042F5A: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==4642==    by 0x58043087: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==4642==    by 0x5804322B: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==4642==    by 0x5804CF48: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==4642==    by 0x5803B5FA: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==4642==    by 0x58039D6E: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==4642==    by 0x5803E62D: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==4642==    by 0x58039018: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==4642==    by 0x1002F4E3B3: ???
==4642==    by 0x1002DB5F2F: ???
==4642==    by 0x1002DB5F17: ???
==4642==    by 0x1002DB5F2F: ???
==4642==    by 0x1C0F: ???
==4642==    by 0x1002009CBF: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable (lwpid 4642)
==4642==    at 0x484CF33: memcpy@GLIBC_2.2.5 (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==4642==    by 0x4A45A8F: copy (char_traits.h:431)
==4642==    by 0x4A45A8F: std::basic_streambuf<char, std::char_traits<char> >::xsgetn(char*, long) (streambuf.tcc:56)
==4642==    by 0x4A0DB39: std::basic_filebuf<char, std::char_traits<char> >::xsgetn(char*, long) (fstream.tcc:748)
==4642==    by 0x4A1B341: sgetn (streambuf:363)
==4642==    by 0x4A1B341: std::istream::read(char*, long) (istream.tcc:696)
==4642==    by 0x1392FD: FS::File::Binary::Read(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (fs.cc:77)
==4642==    by 0x12D0E7: App::PlayRecording(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >) (app.cc:408)
==4642==    by 0x13A7A9: InputEvents::PlayRecording(InputWindow&) (inputEvents.cc:135)
==4642==    by 0x13AF6A: InputWindow::HandleInput(unsigned short) (inputWindow.cc:119)
==4642==    by 0x12A477: App::Update() (app.cc:79)
==4642==    by 0x13BFFA: main (main.cc:7)
client stack range: [0x1FFEFE6000 0x1FFF000FFF] client SP: 0x1FFEFFFA68
valgrind stack range: [0x1002CB6000 0x1002DB5FFF] top usage: 13056 of 1048576


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

